<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bee</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-200</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
type = ""
p_id = 0

bees = 0 // How many bees in the stack, How much pollen/nectar you can gather is based on this amount
escort = 0 
move_speed = 0

gathered_pollen = 0
gathered_nectar = 0
gathered_honey = 0 // The multiplier

home_x = 0 //Where they spawn, and where they will return
home_y = 0

go_x = 0  //Where they want to go
go_y = 0 

state = "go"       //What they are currently doing: go, return, gather/patrol/attack, combat
order_state = "go" //What they want to do when able: go, return, gather/patrol/attack

space = "none" //Space they take nectar or pollen from, or attack
target = "none" //Target patroller chases


//Combat Variables
hp = 50
damage = 0 //Damage taken
attack = 10
enemy_bee = ""
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>type = "dead"
obj_phasetracker.alarm[2] = 2*60

obj_admin.workers_roaming = false

with obj_bee {
    if type == "gatherer" {obj_admin.workers_roaming = true}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement

//When they reach their objective
if (x == go_x &amp;&amp; y == go_y &amp;&amp; state == "go") {
    if (type == "gatherer") {
        space = instance_position(x,y,obj_space)
        state = "gather"
        order_state = "gather"
    }
    
    if (type == "patrol") {
        state = "patrol"
        order_state = "patrol"
    }

    if (type == "attack") {
        space = instance_position(x,y,obj_hive)
        state = "attack"
        order_state = "attack"
    }
}

//When they return to Hive
if (x == home_x &amp;&amp; y == home_y &amp;&amp; state == "return") {
    // Offload resources
    
    //die
    instance_destroy()
}

//Go towards objective
if (state == "go") {
    //Code to move towards go_x and go_y
    if point_distance(x,y,go_x,go_y) &lt;= move_speed {
        x = go_x
        y = go_y 
    } else {
        dir = point_direction(x,y,go_x,go_y)
        x += lengthdir_x(move_speed,dir)
        y += lengthdir_y(move_speed,dir)
    }
}

if (state == "return") {
    //Code to move towards home_x and home_y
    if point_distance(x,y,home_x,home_y) &lt;= move_speed {
        x = home_x
        y = home_y 
    } else {
        dir = point_direction(x,y,home_x,home_y)
        x += lengthdir_x(move_speed,dir)
        y += lengthdir_y(move_speed,dir)
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Do objective

if (state == "gather") {
    //Code to take pollen and nectar from space
    
    
    //When full or space is empty
    state = "return"
    order_state = "return"
    }

if (state == "patrol" &amp;&amp; obj_admin.workers_roaming == false) {
    state = "return"
    order_state = "return"
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Combat Stats

//Set attack
if (type == "gatherer") {attack = (bees * 3) + (escort * 5) }
else
{attack = bees * 5}

//Kills bees
if (escort == 0) {
    if (damage &gt;= hp) {
    bees--
    damage = 0    }
}

//Kills escort instead
if (escort &gt; 0) {
    if (damage &gt;= hp+20) {
    escort--
    damage = 0    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bee">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with other Bee
if (p_id != other.p_id &amp;&amp; type != "gatherer" &amp;&amp; type != "attack" &amp;&amp; state != "combat") {
    state = "combat"
    other.state = "combat"
    
    enemy_bee = other.id
    
    if (p_id &gt; other.p_id) {
    with instance_create(x,y,obj_combat)  {
    users[0] = other.id
    users[1] = other.enemy_bee }
    } 
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DEBUG
draw_self()
draw_text(x,y+16,state)
draw_text(x,y+32,order_state)
draw_text(x,y-16,type)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
