<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_balanced_flower</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_mask_space_setup</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INFO

/*
This is any space that is not a Hive


*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
image_speed = 0
available_actions = 0
box[0] = "none" //Holds the orderboxes
type = "flower"
sub_type = "balanced"

/*
    Types:
    "rock" - You can fly to these, but they provide nothing
    "stump" - Gives patrol bees a range boost when patroled
    "flower" - Provides its resources
    "bud" - Turns into a flower when grown
    
    Sub-types:
    balanced
    pollen
    nectar
    honey
    superflower
*/

growth = 0 // For buds, grows into a flower when it reaches 100
pollen = 1  // How much each unit of resource gives
nectar = 1
honey = 1
resources = 10 // The units that can be taken. 10 is max

info = ""

gatherer = 0
patrol = 0
escort = 0
attackers = 0

collided_with = ds_list_create()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set info box

info = ""

if (type == "flower") {
if (sub_type == "balanced") {info = "Balanced Flower: #Gives a decent #amount of Pollen, #Nectar and Honey."}
if (sub_type == "honey") {info = "Honey-Flower: #Gives more Honey, #but less Pollen and #Nectar."}
if (sub_type == "pollen") {info = "Pollen-Flower: #Gives more Pollen, #but less Nectar and #Honey."}
if (sub_type == "nectar") {info = "Nectar-Flower: #Gives more Nectar, #but less Pollen and #Honey."}
if (sub_type == "superflower") {info = "Superflower: #Gives a massive #amount of Pollen, #Nectar and Honey."}
}

if (type == "rock") {info = "Rock: #Slightly increases #the range of #Patrol bees."}
if (type == "stump") {info = "Stump: #Greatly increases #the range of #Patrol bees."}

if type == "bud" {info = "Bud: #Ungrown flowers. #Pollinate to grow."}

if resources &lt; 0 {resources = 0}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy Order-boxes
if (box[0] == "none") {exit}

if (obj_mouse.target != id) {
    for (var i = 0; i &lt; available_actions; i++) {
        instance_destroy(box[i])
        box[i] = "none"
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bee">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Grow if plant

if type == "bud" &amp;&amp; ds_list_find_index(collided_with,other.id) == -1 &amp;&amp; other.gathered_total &gt; 0 {
    growth += (other.gathered_pollen*other.gathered_total)*2
    show_debug_message("BUD BOOP")
    if other.focus == "bloom" {
        growth += other.gathered_total
    }
    if growth &gt;= 100 {type = "flower"}
    ds_list_add(collided_with,other.id)
}

// Restore resources if focus on growth

if other.focus == "bloom" &amp;&amp; type == "flower" &amp;&amp; ds_list_find_index(collided_with,other.id) == -1 &amp;&amp; other.gathered_total &gt; 0 {
    resources += other.gathered_total
    if resources &gt; 10 {resources = 10}
    ds_list_add(collided_with,other.id)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Send data to other players

if gatherer &gt; 0 || patrol &gt; 0 || escort &gt; 0 || attackers &gt; 0 {
    var send_player = obj_admin.player
    
    // send data
    self.rpc_id = htme_hash()
    var playerlist = htme_getPlayers()
    list_p1 = ds_list_create()
    ds_list_add(list_p1,x,y,300,400)
    for(var i = 0;i&lt;ds_list_size(playerlist);i++) {
        var player = ds_list_find_value(playerlist,i)
        htmerpc_send(self.rpc_id,scr_rpc_order,player,x,y,send_player,gatherer,patrol,escort,attackers)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DEBUG
//draw_self()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw space

//Balanced Flower
if (sub_type == "balanced") {
if (type == "bud" &amp;&amp; growth &lt; 25) {draw_sprite(spr_balanced_flower,0,x,y)}
if (type == "bud" &amp;&amp; growth &gt; 24 &amp;&amp; growth &lt; 61) {draw_sprite(spr_balanced_flower,1,x,y)}
if (type == "bud" &amp;&amp; growth &gt; 60) {draw_sprite(spr_balanced_flower,2,x,y)}

if (type == "flower" &amp;&amp; resources &gt; 7.5) {draw_sprite(spr_balanced_flower,3,x,y)}
if (type == "flower" &amp;&amp; resources &gt; 5 &amp;&amp; resources &lt;= 7.5) {draw_sprite(spr_balanced_flower,4,x,y)}
if (type == "flower" &amp;&amp; resources &gt; 2.5 &amp;&amp; resources &lt;= 5) {draw_sprite(spr_balanced_flower,5,x,y)}
if (type == "flower" &amp;&amp; resources &gt; 0 &amp;&amp; resources &lt;= 2.5) {draw_sprite(spr_balanced_flower,6,x,y)}
if (type == "flower" &amp;&amp; resources == 0) {draw_sprite(spr_balanced_flower,7,x,y)}
}

//Pollen Flower
if (sub_type == "pollen") {
if (type == "bud" &amp;&amp; growth &lt; 25) {draw_sprite(spr_pollen_flower,0,x,y)}
if (type == "bud" &amp;&amp; growth &gt; 24 &amp;&amp; growth &lt; 61) {draw_sprite(spr_pollen_flower,1,x,y)}
if (type == "bud" &amp;&amp; growth &gt; 60) {draw_sprite(spr_pollen_flower,2,x,y)}

if (type == "flower" &amp;&amp; resources &gt; 7.5) {draw_sprite(spr_pollen_flower,3,x,y)}
if (type == "flower" &amp;&amp; resources &gt; 5 &amp;&amp; resources &lt;= 7.5) {draw_sprite(spr_pollen_flower,4,x,y)}
if (type == "flower" &amp;&amp; resources &gt; 2.5 &amp;&amp; resources &lt;= 5) {draw_sprite(spr_pollen_flower,5,x,y)}
if (type == "flower" &amp;&amp; resources &gt; 0 &amp;&amp; resources &lt;= 2.5) {draw_sprite(spr_pollen_flower,6,x,y)}
if (type == "flower" &amp;&amp; resources == 0) {draw_sprite(spr_pollen_flower,7,x,y)}
}

//Pollen Flower
if (sub_type == "nectar") {
if (type == "bud" &amp;&amp; growth &lt; 25) {draw_sprite(spr_nectar_flower,0,x,y)}
if (type == "bud" &amp;&amp; growth &gt; 24 &amp;&amp; growth &lt; 61) {draw_sprite(spr_nectar_flower,1,x,y)}
if (type == "bud" &amp;&amp; growth &gt; 60) {draw_sprite(spr_nectar_flower,2,x,y)}

if (type == "flower" &amp;&amp; resources &gt; 7.5) {draw_sprite(spr_nectar_flower,3,x,y)}
if (type == "flower" &amp;&amp; resources &gt; 5 &amp;&amp; resources &lt;= 7.5) {draw_sprite(spr_nectar_flower,4,x,y)}
if (type == "flower" &amp;&amp; resources &gt; 2.5 &amp;&amp; resources &lt;= 5) {draw_sprite(spr_nectar_flower,5,x,y)}
if (type == "flower" &amp;&amp; resources &gt; 0 &amp;&amp; resources &lt;= 2.5) {draw_sprite(spr_nectar_flower,6,x,y)}
if (type == "flower" &amp;&amp; resources == 0) {draw_sprite(spr_nectar_flower,7,x,y)}
}

//Honey Flower
if (sub_type == "honey") {
if (type == "bud" &amp;&amp; growth &lt; 25) {draw_sprite(spr_honey_flower,0,x,y)}
if (type == "bud" &amp;&amp; growth &gt; 24 &amp;&amp; growth &lt; 61) {draw_sprite(spr_honey_flower,1,x,y)}
if (type == "bud" &amp;&amp; growth &gt; 60) {draw_sprite(spr_honey_flower,2,x,y)}

if (type == "flower" &amp;&amp; resources &gt; 7.5) {draw_sprite(spr_honey_flower,3,x,y)}
if (type == "flower" &amp;&amp; resources &gt; 5 &amp;&amp; resources &lt;= 7.5) {draw_sprite(spr_honey_flower,4,x,y)}
if (type == "flower" &amp;&amp; resources &gt; 2.5 &amp;&amp; resources &lt;= 5) {draw_sprite(spr_honey_flower,5,x,y)}
if (type == "flower" &amp;&amp; resources &gt; 0 &amp;&amp; resources &lt;= 2.5) {draw_sprite(spr_honey_flower,6,x,y)}
if (type == "flower" &amp;&amp; resources == 0) {draw_sprite(spr_honey_flower,7,x,y)}
}

//Superflower
if (sub_type == "superflower") {
draw_sprite_ext(spr_superflower,0,x,y,2,2,0,c_white,1)}

if (type == "rock") {draw_sprite(spr_rock,0,x,y)}
if (type == "stump") {draw_sprite(spr_stump,0,x,y)}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///User Feedback
var player_id = scr_get_data("p_id",0)
var spawn_x = scr_get_data("spawn_x",player_id)
var spawn_y = scr_get_data("spawn_y",player_id)

if (gatherer &gt; 0 || patrol &gt; 0 || attackers &gt; 0)
draw_line_colour(spawn_x,spawn_y,x,y,c_red,c_red)

var g_exist = false
var p_exist = false
var e_exist = false
var a_exist = false
var all_orders = 0

if (gatherer &gt; 0) {g_exist = true
all_orders++}
if (patrol &gt; 0) {p_exist = true
all_orders++}
if (escort &gt; 0) {e_exist = true
all_orders++}
if (attackers &gt; 0) {a_exist = true
all_orders++}





if (all_orders == 1) {
if (g_exist) {
draw_sprite(spr_gatherer_icon,0,x,y)
draw_text(x,y-32,gatherer)}
if (p_exist) {
draw_sprite(spr_patrol_icon,0,x,y)
draw_text(x,y-32,patrol)}
if (a_exist) {
draw_sprite(spr_attack_icon,0,x,y)
draw_text(x,y-32,attackers)}
}

if (all_orders == 2) {
if (g_exist &amp;&amp; p_exist) {
draw_sprite(spr_gatherer_icon,0,x-16,y)
draw_text(x-16,y-32,gatherer)
draw_sprite(spr_patrol_icon,0,x+16,y)
draw_text(x+16,y-32,patrol)}
if (g_exist &amp;&amp; e_exist) {
draw_sprite(spr_gatherer_icon,0,x,y)
draw_text(x,y-32,gatherer)
draw_sprite(spr_escort_icon,0,x,y-32)
draw_text(x,y-64,escort)}

}

if (all_orders == 3) {
draw_sprite(spr_gatherer_icon,0,x-16,y)
draw_text(x-16,y-16,gatherer)
draw_sprite(spr_patrol_icon,0,x+16,y)
draw_text(x+16,y-16,patrol)
draw_sprite(spr_escort_icon,0,x-16,y-32)
draw_text(x-16,y-32,escort)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
